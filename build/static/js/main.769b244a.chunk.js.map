{"version":3,"sources":["components/Button.js","components/Header.js","components/Totals.js","components/Form.js","components/InvestmentsTable.js","components/Portfolio.js","components/AddHolding.js","components/Footer.js","App.js","index.js"],"names":["Button","color","background","text","onClick","type","style","backgroundColor","border","defaultProps","Header","useState","stocks","setStocks","useEffect","fetch","method","headers","then","response","json","data","arr","autocomplete","inp","currentFocus","addEventListener","e","first","second","val","value","closeAllLists","document","createElement","setAttribute","id","parentNode","appendChild","i","length","substr","toUpperCase","innerHTML","info","querySelector","price","target","getAttribute","j","name","symbol","display","x","getElementById","getElementsByTagName","key","addActive","preventDefault","click","removeActive","classList","add","remove","element","getElementsByClassName","removeChild","className","addHoldingForm","portfolioPage","container","setTimeout","transform","opacity","showTotals","accValue","accReturn","localStorage","getItem","itemsList","JSON","parse","parseInt","total","return","Totals","thousandsSeparators","toFixed","num","numParts","toString","split","replace","join","Form","handleClick","searchInput","quantity","showTotal","autoComplete","placeholder","onChange","min","step","readOnly","investmentsTable","totalReturn","Math","floor","random","eliminateCommas","alert","undefined","find","textContent","table","alignItems","height","append","itemValues","push","setItem","stringify","holdingRow","children","savedItem","innerText","querySelectorAll","removeRow","row","parentElement","firstElementChild","splice","removeItem","position","InvestmentsTable","map","item","index","title","Portfolio","AddHolding","Footer","href","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.769b244a.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, background, text, onClick}) => {\r\n    return (\r\n        <>\r\n            <button type=\"button\" style={{ color: color, backgroundColor: background, border: 'none' }} onClick={onClick}>{text}</button>  \r\n        </>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: '#fff',\r\n    background: '#424294'\r\n}\r\n\r\nButton.propTypes = {\r\n    color: PropTypes.string,\r\n    background: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Button\r\n","import Button from './Button'\r\nimport { useState, useEffect } from 'react'\r\n\r\nconst Header = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('stocks.json', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setStocks(data.stocks)\r\n        })\r\n    }, [])\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const addHoldingForm = document.querySelector('.addHolding');\r\n        const portfolioPage = document.querySelector('.portfolio');\r\n        const container = document.querySelector('.container');\r\n\r\n        addHoldingForm.classList.add('active');\r\n        // Show form after setting \"display\" to \"block\"\r\n        setTimeout(() => {\r\n            addHoldingForm.classList.add('visually-active');\r\n            container.classList.add('margin-change');\r\n        }, 20);\r\n\r\n        portfolioPage.style.transform = 'translateX(-200rem)';\r\n        portfolioPage.style.opacity = 0;\r\n\r\n        autocomplete(document.querySelector('#searchInput'), arr);\r\n    }\r\n\r\n    const arr = ['Apple Inc.', 'AAPL', 'Microsoft Corporation', 'MSFT', 'Amazon.com', 'AMZN', 'Alphabet Inc.', 'GOOGL', 'Facebook Inc.', 'FB', 'Tesla Inc.', 'TSLA', 'JP Morgan Chase & Co.', 'JPM', 'Visa Inc.', 'V', 'Johnson & Johnson', 'JNJ', 'Walmart Inc.', 'WMT', 'Mastercard Inc.', 'MA', 'NVIDIA Corporation', 'NVDA', 'UnitedHealth Group Inc.', 'UNH', 'Bank of America Corporation', 'BAC', 'Home Depot Inc.', 'HD', 'Walt Disney Company', 'DIS', 'Procter & Gamble Company', 'PG', 'PayPal Holdings Inc.', 'PYPL', 'Intel Corporation', 'INTC', 'Netflix Inc.', 'NFLX'];\r\n\r\n    // Autocomplete function for the search input\r\n    const autocomplete = (inp, arr) => {\r\n        let currentFocus;\r\n\r\n        inp.addEventListener('input', (e) => {\r\n            let first, second, val = inp.value;\r\n            closeAllLists();\r\n\r\n            if (!val) {return false};\r\n            currentFocus = -1;\r\n\r\n            // Create the div element that will contain the items\r\n            first = document.createElement('div');\r\n            first.setAttribute('class', 'autocomplete-items');\r\n            first.setAttribute('id', inp.id + 'autocomplete-list');\r\n\r\n            inp.parentNode.appendChild(first);\r\n\r\n            // Show autocomplete options\r\n            for (let i = 0; i < arr.length; i++) {\r\n                if (arr[i].substr(0, val.length).toUpperCase() === val.toUpperCase()) {\r\n                    // Create a div for each matching item\r\n                    second = document.createElement('div');\r\n                    second.innerHTML = `<strong>${arr[i].substr(0, val.length)}<strong>`;\r\n                    second.innerHTML += arr[i].substr(val.length);\r\n                    second.innerHTML += `<input type='hidden'>`;\r\n                    second.setAttribute('key', arr[i]);\r\n\r\n                    // Execute a function when someone clicks the item\r\n                    second.addEventListener('click', (e) => {\r\n                        const info = document.querySelector('.addHolding form .showInfo');\r\n                        const price = document.querySelector('.price input');\r\n\r\n                        inp.value = e.target.getAttribute('key');\r\n                        for (let j = 0; j < stocks.length; j++) {\r\n                            if (e.target.getAttribute('key') === stocks[j].name || e.target.getAttribute('key') === stocks[j].symbol) {\r\n                                info.style.display = 'flex';\r\n                                info.innerHTML = (`\r\n                                    ${stocks[j].name}\r\n                                    <strong>${stocks[j].symbol}</strong>\r\n                                `);\r\n\r\n                                price.value = stocks[j].price;\r\n                            }\r\n                        }\r\n \r\n                        closeAllLists();\r\n                    });\r\n                    first.appendChild(second);\r\n                }\r\n            }\r\n        });\r\n\r\n        // Execute a function when a specific key is pressed \r\n        inp.addEventListener('keydown', (e) => {\r\n            let x = document.getElementById(inp.id + 'autocomplete-list');\r\n            if (x) {x = x.getElementsByTagName('div')};\r\n\r\n            // If the ARROW DOWN key is pressed\r\n            if (e.key === 'ArrowDown') {\r\n                currentFocus++;\r\n\r\n                addActive(x);\r\n            } else if (e.key === 'ArrowUp') {\r\n                // If the ARROW UP key is pressed\r\n                currentFocus--;\r\n\r\n                addActive(x);\r\n            } else if (e.key === 'Enter') {\r\n                // If the ENTER key is pressed\r\n                e.preventDefault();\r\n\r\n                if (currentFocus > -1) {\r\n                    if (x) {x[currentFocus].click()};\r\n                }\r\n            }\r\n        });\r\n\r\n        // Execute a function that shows an item as active\r\n        const addActive = (x) => {\r\n            if (!x) {return false};\r\n\r\n            removeActive(x);\r\n            if (currentFocus >= x.length) {currentFocus = 0};\r\n            if (currentFocus < 0) {currentFocus = (x.length - 1)};\r\n\r\n            x[currentFocus].classList.add('autocomplete-active');\r\n        }\r\n\r\n        // Execute a function that shows that an item isn't active anymore\r\n        const removeActive = (x) => {\r\n            for (let i = 0; i < x.length; i++) {\r\n                x[i].classList.remove('autocomplete-active');\r\n            }\r\n        }\r\n\r\n        // Execute a function that closes the autocomplete lists\r\n        const closeAllLists = (element) => {\r\n            let x = document.getElementsByClassName('autocomplete-items');\r\n\r\n            for (let i = 0; i < x.length; i++) {\r\n                if (element !== x[i] && element !== inp) {\r\n                    x[i].parentNode.removeChild(x[i]);\r\n                }\r\n            }\r\n        } \r\n\r\n        // Execute a function that closes the lists when you click outside it\r\n        document.addEventListener('click', (e) => {\r\n            closeAllLists(e.target);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"portfolioHeader\">\r\n            <h3>Your Investments</h3>\r\n            <Button text=\"ADD HOLDING\" color=\"#424294\" background=\"#fff\" onClick={handleClick} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { thousandsSeparators } from './Form'\r\n\r\nconst showTotals = () => {\r\n    let accValue = 0;\r\n    let accReturn = 0;\r\n\r\n    if (localStorage.getItem('tableItem') === null) {\r\n        accValue = 0;\r\n        accReturn = 0;\r\n    } else {\r\n        let itemsList = JSON.parse(localStorage.getItem('tableItem'));\r\n\r\n        for (let i = 0; i < itemsList.length; i++) {\r\n            accValue += parseInt(itemsList[i].total);\r\n            accReturn += itemsList[i].return;\r\n        }\r\n\r\n        accReturn = accReturn / itemsList.length;\r\n    }\r\n\r\n    let obj = {\r\n        value: accValue,\r\n        return: accReturn\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\nconst Totals = () => {\r\n\r\n    return ( \r\n        <div className=\"totals\">\r\n            <div className=\"accValue\">\r\n                <h3>Account Total Value</h3>\r\n                <p>${thousandsSeparators(showTotals().value)}</p>\r\n            </div>\r\n            <div className=\"accReturn\">\r\n                <h3>Account Average Return</h3>\r\n                <p>{showTotals().return.toFixed(2)}%</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { showTotals }\r\nexport default Totals","import React from 'react'\r\nimport { FaTimes, FaEquals } from 'react-icons/fa'\r\nimport Button from './Button'\r\nimport { removeRow } from './InvestmentsTable'\r\nimport { showTotals } from './Totals'\r\n\r\n\r\nconst Form = () => {\r\n    const handleClick = () => {\r\n        const addHoldingForm = document.querySelector('.addHolding');\r\n        const portfolioPage = document.querySelector('.portfolio');\r\n        const container = document.querySelector('.container');\r\n        const searchInput = document.getElementById('searchInput');\r\n        const price = document.querySelector('.price input');\r\n        const quantity = document.querySelector('.quantity input');\r\n        const total = document.querySelector('.total input');\r\n        const info = document.querySelector('.addHolding form .showInfo');\r\n\r\n        addHoldingForm.classList.remove('visually-active');\r\n        // Remove form after setting \"display\" back to \"none\"\r\n        setTimeout(() => {\r\n            addHoldingForm.classList.remove('active');\r\n            container.classList.remove('margin-change');\r\n\r\n            info.style.display = 'none';\r\n\r\n            searchInput.value = '';\r\n            price.value = '';\r\n            quantity.value = '';\r\n            total.value = '';\r\n        }, 1020);\r\n\r\n        portfolioPage.style.transform = 'translateX(0rem)';\r\n        portfolioPage.style.opacity = 1;\r\n    }\r\n\r\n    // Show total\r\n    const showTotal = (e) => {\r\n        const total = document.querySelector('.total input');\r\n        const price = document.querySelector('.price input');\r\n        const quantity = document.querySelector('.quantity input');\r\n\r\n        if (e.target === quantity) {\r\n            total.value = thousandsSeparators(e.target.value * price.value);\r\n        } else if (e.target === price) {\r\n            total.value = thousandsSeparators(e.target.value * quantity.value);\r\n        }\r\n    }\r\n\r\n    // Show total with commmas\r\n    const thousandsSeparators = (num) => {\r\n        let numParts = num.toString().split(\".\");\r\n        numParts[0] = numParts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        return numParts.join(\".\");\r\n    }\r\n\r\n    // Save investment \r\n    const saveInvestment = () => {\r\n        const investmentsTable = document.querySelector('.investmentsTable');\r\n        const searchInput = document.getElementById('searchInput').value;\r\n        const price = document.querySelector('.price input').value;\r\n        const quantity = document.querySelector('.quantity input').value;\r\n        const total = document.querySelector('.total input').value;\r\n        // The total return is randomized every time there are changes inside the portfolio\r\n        const totalReturn = (Math.floor(Math.random() * 101)) * (Math.random() < 0.5 ? -1 : 1);\r\n\r\n        const arr = ['Apple Inc.', 'AAPL', 'Microsoft Corporation', 'MSFT', 'Amazon.com', 'AMZN', 'Alphabet Inc.', 'GOOGL', 'Facebook Inc.', 'FB', 'Tesla Inc.', 'TSLA', 'JP Morgan Chase & Co.', 'JPM', 'Visa Inc.', 'V', 'Johnson & Johnson', 'JNJ', 'Walmart Inc.', 'WMT', 'Mastercard Inc.', 'MA', 'NVIDIA Corporation', 'NVDA', 'UnitedHealth Group Inc.', 'UNH', 'Bank of America Corporation', 'BAC', 'Home Depot Inc.', 'HD', 'Walt Disney Company', 'DIS', 'Procter & Gamble Company', 'PG', 'PayPal Holdings Inc.', 'PYPL', 'Intel Corporation', 'INTC', 'Netflix Inc.', 'NFLX'];\r\n\r\n        // Eliminate commas from separated numbers\r\n        let eliminateCommas = (num) => {\r\n            let numArr = num.split(',');\r\n            return numArr.join('');\r\n        }\r\n\r\n        if (searchInput === '' || quantity === '') {\r\n            alert('Please fill out all fields!');\r\n        } else if (arr.find(element => element === searchInput) === undefined) { \r\n            alert('Please enter a valid company name or symbol!');\r\n        } else {\r\n            const symbol = document.querySelector('.addHolding form .showInfo strong').textContent;\r\n\r\n            if (localStorage.getItem('tableItem') === null) {\r\n                const table = document.createElement('table');\r\n                let arr = [];\r\n\r\n                investmentsTable.innerHTML = '';\r\n                investmentsTable.style = {\r\n                    alignItems: 'top',\r\n                    height: 'auto'\r\n                }\r\n\r\n                investmentsTable.append(table);\r\n                table.innerHTML = `\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Symbol</th>\r\n                            <th>Price($)</th>\r\n                            <th>Quantity</th>\r\n                            <th>Total Value($)</th>\r\n                            <th>Total Return</th>\r\n                            <th>Remove</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr class=\"row-${symbol}\">\r\n                            <td>${symbol}</td>\r\n                            <td>${thousandsSeparators(price)}</td>\r\n                            <td>${thousandsSeparators(quantity)}</td>\r\n                            <td>${thousandsSeparators(total)}</td>\r\n                            <td>${totalReturn}%</td>\r\n                            <td><button type=\"button\" title=\"Remove Holding\" class=\"remove\">X</button></td>\r\n                        </tr>\r\n                    </tbody>\r\n                `;\r\n\r\n                let itemValues = {\r\n                    symbol: symbol,\r\n                    price: price,\r\n                    quantity: quantity,\r\n                    total: eliminateCommas(total), // Saved in localStorage without comma so it can be added to previous value\r\n                    return: totalReturn\r\n                };\r\n\r\n                arr.push(itemValues);\r\n                localStorage.setItem('tableItem', JSON.stringify(arr));\r\n            } else if (JSON.parse(localStorage.getItem('tableItem')).find(element => element.symbol === symbol) !== undefined) {\r\n                // If the searched holding is already in the portfolio, add all the new data to the already existing holding's row\r\n                // instead of creating a new row \r\n\r\n                let holdingRow = document.querySelector(`.row-${symbol}`).children;\r\n                let itemsList = JSON.parse(localStorage.getItem('tableItem'));\r\n                let savedItem = itemsList.find(element => element.symbol === symbol);\r\n\r\n                // The newly entered data is added to the existing one and shown with separators in the portfolio,\r\n                // and saved without separators in the localStorage  \r\n\r\n                holdingRow[1].innerText = thousandsSeparators(price);\r\n                savedItem.price = price;\r\n\r\n                holdingRow[2].innerText = thousandsSeparators(parseInt(eliminateCommas(holdingRow[2].innerText)) + parseInt(eliminateCommas(quantity)));\r\n                savedItem.quantity = parseInt(savedItem.quantity) + parseInt(eliminateCommas(quantity));\r\n                \r\n                holdingRow[3].innerText = thousandsSeparators(parseInt(eliminateCommas(holdingRow[3].innerText)) + parseInt(eliminateCommas(total)));\r\n                savedItem.total = parseInt(savedItem.total) + parseInt(eliminateCommas(total));\r\n\r\n                holdingRow[4].innerText = `${totalReturn}%`;\r\n                savedItem.return = totalReturn;\r\n\r\n                localStorage.setItem('tableItem', JSON.stringify(itemsList));\r\n            } else {\r\n                const tableBody = document.querySelector('.investmentsTable table tbody');\r\n\r\n                tableBody.innerHTML += `\r\n                    <tr class=\"row-${symbol}\">\r\n                        <td>${symbol}</td>\r\n                        <td>${thousandsSeparators(price)}</td>\r\n                        <td>${thousandsSeparators(quantity)}</td>\r\n                        <td>${thousandsSeparators(total)}</td>\r\n                        <td>${totalReturn}%</td>\r\n                        <td><button type=\"button\" title=\"Remove Holding\" class=\"remove\">X</button></td>\r\n                    </tr>\r\n                `;\r\n\r\n                let itemValues = {\r\n                    symbol: symbol,\r\n                    price: price,\r\n                    quantity: quantity,\r\n                    total: eliminateCommas(total), // Saved in localStorage without comma so it can be added to previous value\r\n                    return: totalReturn\r\n                };\r\n\r\n                let savedItem = JSON.parse(localStorage.getItem('tableItem'));\r\n                savedItem.push(itemValues);\r\n                localStorage.setItem('tableItem', JSON.stringify(savedItem));\r\n            }\r\n\r\n            handleClick();\r\n\r\n            // Add the removeRow function to ALL removeBtn buttons\r\n            for (let removeBtn of document.querySelectorAll('.remove')) {\r\n                removeBtn.addEventListener('click', removeRow)\r\n            }\r\n        }\r\n\r\n        // Modify totals after saving holding\r\n        document.querySelector('.totals .accValue p').innerText = `$${thousandsSeparators(showTotals().value)}`;\r\n        document.querySelector('.totals .accReturn p').innerText = `${showTotals().return.toFixed(2)}%`;\r\n    }\r\n\r\n    return (\r\n        <form autoComplete=\"off\">\r\n            <label>Company name or symbol</label> \r\n            <br /><br />\r\n            <div className=\"autocomplete\">\r\n                <input id=\"searchInput\" type=\"search\" placeholder=\"Enter name or symbol...\" />\r\n            </div>\r\n\r\n            <div className='showInfo'></div>\r\n            <br /><br />\r\n            <div className=\"calculateTotal\">\r\n                <div className=\"quantity\">\r\n                    <label>Quantity</label>\r\n                    <br /><br />\r\n                    <input onChange={showTotal} type=\"number\" min=\"0\" placeholder=\"Number of shares...\" />\r\n                </div>\r\n                <FaTimes />\r\n                <div className=\"price\">\r\n                    <label>Price ($)</label>\r\n                    <br /><br />\r\n                    <input onChange={showTotal} type=\"number\" min=\"0\" step=\"0.01\" placeholder=\"Share price...\" />\r\n                </div>\r\n                <FaEquals />\r\n                <div className=\"total\">\r\n                    <label>Total ($)</label>\r\n                    <br /><br />\r\n                    <input type=\"text\" placeholder=\"Total cost...\" readOnly/>\r\n                </div>\r\n            </div>\r\n            <br /><br /><br />\r\n            <div className=\"buttons\">\r\n                <Button text=\"SAVE HOLDING\" color=\"#fff\" background=\"#424294\" onClick={saveInvestment} />\r\n                <Button text=\"CANCEL\" color=\"#fff\" background=\"#424294\" onClick={handleClick} />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const thousandsSeparators = (num) => {\r\n    let numParts = num.toString().split(\".\");\r\n    numParts[0] = numParts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    return numParts.join(\".\");\r\n} \r\n\r\nexport default Form\r\n","import { thousandsSeparators } from './Form'\r\nimport { showTotals } from './Totals'\r\n\r\n// Remove selected row\r\nconst removeRow = (e) => {\r\n    const investmentsTable = document.querySelector('.investmentsTable');\r\n    let itemsList = JSON.parse(localStorage.getItem('tableItem'));\r\n    let row = e.target.parentElement.parentElement;\r\n    row.remove();\r\n\r\n    for (let i = 0; i < itemsList.length; i++) {\r\n\r\n        if (itemsList[i].symbol === row.firstElementChild.innerText) {\r\n            itemsList.splice(i, 1)\r\n        }\r\n\r\n        localStorage.setItem('tableItem', JSON.stringify(itemsList));\r\n    }\r\n\r\n    if (itemsList.length === 0) {\r\n        localStorage.removeItem('tableItem')\r\n        investmentsTable.innerHTML = `<h3>You currently don't have any investments...</h3>`;\r\n        investmentsTable.style.position = 'absolute';\r\n        investmentsTable.style.height = '85%';\r\n        investmentsTable.style.alignItems = 'center';\r\n    }\r\n\r\n    // Modify totals after removing holding\r\n    document.querySelector('.totals .accValue p').innerText = `$${thousandsSeparators(showTotals().value)}`;\r\n    document.querySelector('.totals .accReturn p').innerText = `${showTotals().return.toFixed(2)}%`;\r\n}\r\n\r\n\r\nconst InvestmentsTable = () => {\r\n    const totalReturn = (Math.floor(Math.random() * 101)) * (Math.random() < 0.5 ? -1 : 1)\r\n    let itemsList = JSON.parse(localStorage.getItem('tableItem'));\r\n\r\n    if (localStorage.getItem('tableItem') === null) {\r\n        // The style for the empty portfolio\r\n        const tableStyles = {\r\n            position: 'absolute',\r\n            alignItems: 'center',\r\n            height: '85%'\r\n        }\r\n\r\n        return (\r\n            <div className=\"investmentsTable\" style={tableStyles}>\r\n                <h3>You currently don't have any investments...</h3>\r\n            </div>\r\n        )\r\n    } else {\r\n        // If there are items in localStorage make a table with the items\r\n    \r\n        return (\r\n            <div className=\"investmentsTable\">\r\n                <div className=\"tableContainer\">\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Symbol</th>\r\n                                <th>Price($)</th>\r\n                                <th>Quantity</th>\r\n                                <th>Total Value($)</th>\r\n                                <th>Total Return</th>\r\n                                <th>Remove</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {itemsList.map((item, index) => (\r\n                                <tr className={`row-${item.symbol}`} key={index}>\r\n                                    <td>{item.symbol}</td>\r\n                                    <td>{thousandsSeparators(item.price)}</td>\r\n                                    <td>{thousandsSeparators(item.quantity)}</td>\r\n                                    <td>{thousandsSeparators(item.total)}</td>\r\n                                    <td>{item.return > 0 ? item.return - totalReturn : item.return + totalReturn}%</td>\r\n                                    <td><button type=\"button\" title=\"Remove Holding\" className=\"remove\" onClick={removeRow}>X</button></td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { removeRow }\r\nexport default InvestmentsTable\r\n","import Header from './Header'\r\nimport InvestmentsTable from './InvestmentsTable'\r\n\r\nconst Portfolio = () => {\r\n    return (\r\n        <div className=\"portfolio\"> \r\n            <Header />\r\n            <InvestmentsTable />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Portfolio\r\n","import Form from './Form'\r\n\r\nconst AddHolding = () => {\r\n    return (\r\n        <div className=\"addHolding\">\r\n            <h2>Add New Holding</h2>\r\n            <Form />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddHolding\r\n","const Footer = () => {\r\n    return (\r\n        <footer> \r\n            <small>&copy;Copyright <a href=\"https://github.com/dangeros101\" target=\"__blank\">dangeros101</a> 2021</small>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import Portfolio from './components/Portfolio'\nimport AddHolding from './components/AddHolding'\nimport Footer from './components/Footer'\nimport Totals from './components/Totals'\n\nfunction App() {\n  return (\n    <>\n      <header>\n        <h1>Stock Portfolio Tracker</h1>\n      </header>\n      <Totals />\n      <div className=\"container\">\n        <Portfolio />\n        <AddHolding />\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}